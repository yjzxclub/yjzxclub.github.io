<p>一、环境准备</p>
<p>使用Github Pages搭建个人博客，一劳永逸，可以让我们更加专注于博客的撰写。博客的更新是通过将新建或改动的博客放在指定文件夹并推送到远程Github仓库来完成的，所以我们本地需要有Git环境，如果还没有安装Git，可以看下面的文章：</p>
<ol>
<li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000" target="_blank" rel="noopener">安装Git</a></li>
<li><a href="https://www.cnblogs.com/jiechn/p/4615520.html" target="_blank" rel="noopener">Git关联远程GitHub仓库</a></li>
</ol>
<p>二、搭建博客</p>
<p>1、新建仓库</p>
<img src="https://img-blog.csdnimg.cn/20190423153247380.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2OTA3MjUx,size_16,color_FFFFFF,t_70" width="900">
<p>以<code>username.github.io</code>作为仓库名字。</p>
<p>2、本地克隆</p>
<p>本地创建文件夹，用于存放远程仓库，打开所创建的文件夹，右键选择<code>git bash here</code>，表示在当前目录打开<code>git bash</code>程序，然后执行如下命令，将刚才创建的仓库克隆到本地：</p>
<p><code>git clone https://github.com/AmazingChen/amazingchen.github.io.git</code></p>
<p>如果<code>步骤1</code>中创建仓库时，没有勾选<code>Initialize this repository with a README</code>，将有如下提示：</p>
<img src="https://img-blog.csdnimg.cn/20190423155056500.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2OTA3MjUx,size_16,color_FFFFFF,t_70" width="600">
<p>warning，可以忽略，或手动在远程仓库创建一个<code>readme.md</code>，然后重新<code>clone</code>。</p>
<p>3、新建主页</p>
<p>在仓库文件夹下创建<code>index.html</code>：</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;

	&lt;/head&gt;
	&lt;body&gt;
	&lt;p&gt;hello, my first page!&lt;/p&gt;
	&lt;/body&gt;
&lt;/html
</code></pre>
<p>4、推送到远程仓库</p>
<p>在仓库文件夹下，右键选择<code>git bash here</code>，然后执行命令：</p>
<pre><code>git add --all
git commit -m "add index.html"
git push origin master
</code></pre>
<p>5、验证</p>
<p>成功push到远程仓库后，访问 <code>username.github.io</code>，看到如下界面，就表示成功通过Github Pages搭建了个人的博客。</p>
<img src="https://img-blog.csdnimg.cn/20190423155722798.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2OTA3MjUx,size_16,color_FFFFFF,t_70" width="600">
<p>三、更换主题</p>
<p>上面裸奔的博客主页，跟原始人类一样，你一定不满意，我们穿越几千年文明，直接站在巨人的肩膀上，选一套主题吧。</p>
<p>Github Pages基于Jekyll构建，<b><a href="http://jekyllcn.com/" target="_blank" rel="noopener">Jekyll</a></b> 可以帮助我们把纯文本转换为静态博客网站，实现一劳永逸。</p>
<p>你可以在<a href="http://jekyllthemes.org/page5/" target="_blank" rel="noopener">JekyllThemes</a>找到喜欢的主题，也可以在其他地方找。</p>
<p><b>"I want you, <a href="https://github.com/onevcat/vno-jekyll" target="_blank" rel="noopener">Vno-Jekyll</a>."</b> 我选择Vno。</p>
<p>1、下载主题</p>
<img src="https://img-blog.csdnimg.cn/20190423160921693.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2OTA3MjUx,size_16,color_FFFFFF,t_70" width="600">
<p>下载后，首先将我们仓库文件夹下的文件清空，但是要保留<code>.git</code>文件夹：</p>
<img src="https://img-blog.csdnimg.cn/20190423161305626.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2OTA3MjUx,size_16,color_FFFFFF,t_70" width="600">
<p>然后将下载的主题压缩包解压到仓库文件夹下，结果如下：</p>
<img src="https://img-blog.csdnimg.cn/20190423161425422.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2OTA3MjUx,size_16,color_FFFFFF,t_70" width="600">
<p>访问 <a href="http://jekyllcn.com/docs/structure/" target="_blank" rel="noopener">Jekyll-目录结构</a> 详细了解每个文件夹的功能：</p>
<pre><code>.
├── _config.yml
├── _drafts
|   ├── begin-with-the-crazy-ideas.textile
|   └── on-simplicity-in-technology.markdown
├── _includes
|   ├── footer.html
|   └── header.html
├── _layouts
|   ├── default.html
|   └── post.html
├── _posts
|   ├── 2007-10-29-why-every-programmer-should-play-nethack.textile
|   └── 2009-04-26-barcamp-boston-4-roundup.textile
├── _site
├── .jekyll-metadata
└── index.html
</code></pre>
<p>2、搭建Jekyll环境</p>
<p>只有主题文件是不够的，我们需要搭建Jekyll环境，通过遵循Jekyll的规范，让Jekyll帮助我们生成静态网站。</p>
<p>（1） 安装Ruby：<a href="https://www.ruby-lang.org/zh_cn/documentation/installation/" target="_blank" rel="noopener">Ruby安装教程</a></p>
<p>（2）打开CMD，执行命令安装Jekyll：</p>
<pre><code>gem install jekyll
</code></pre>
<p>（3）进入仓库文件夹，执行命令：</p>
<pre><code>bundle install
</code></pre>
<p>注意，必须进入仓库文件夹下再执行上述命令，否则会有如下提示，表示bundle找不到gemfile文件：</p>
<img src="https://img-blog.csdnimg.cn/20190423163300527.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2OTA3MjUx,size_16,color_FFFFFF,t_70" width="600">
<blockquote>
<p>Rails 3中引入Bundle来管理项目中的所有Gem依赖，该命令只能在一个含有Gemfile的目录下执行，<code>bundle install</code> 命令将尝试更新系统中已存在的gem包。更多参考：<a href="https://blog.csdn.net/huaishu/article/details/38778777" target="_blank" rel="noopener">bundle install 命令</a></p>
</blockquote>
<p>（4）启动Jekyll服务</p>
<pre><code>bundle exec jekyll serve
</code></pre>
<p>启动Jekyll服务时，可能会遇到如下错误：</p>
<pre><code>  Conversion error: Jekyll::Converters::Scss encountered an error
  while converting 'css/main.scss':
                    Invalid GBK character "\xE2" on line 10
jekyll 3.4.0 | Error:  Invalid GBK character "\xE2" on line 10
</code></pre>
<p>很明显，是编码问题，参考网上方法<a href="https://yangaijun.com/2017/04/05/problem-solved.html" target="_blank" rel="noopener">解决 Invalid GBK character "\xE2" 过程中的发现</a>，找到<code>D:\RailsInstaller\Ruby2.3.3\lib\ruby\gems\2.3.0\gems\sass-3.7.2\lib\sass.rb</code>文件，在<code>require后</code>追加：</p>
<pre><code>Encoding.default_external = Encoding.find('utf-8')
</code></pre>
<p>然后重新启动Jekyll服务，看到如下打印，表示启动成功：</p>
<img src="https://img-blog.csdnimg.cn/2019042316455187.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2OTA3MjUx,size_16,color_FFFFFF,t_70" widh="600">
<p>（5）验证</p>
<p>访问 <code>http://127.0.0.1:4000</code>，当你发现你的博客首页从一个原始人变成光鲜亮丽的现代人时，表示博客主题已经应用成功了。</p>
<p>（6）推送到远程仓库</p>
<p>做完上述操作后，由于还没有将修改提交到远程仓库，所以当你访问<code>username.github.io</code>时，你看到的还是一个光溜溜的原始人，执行以下命令完成进化吧皮卡丘：</p>
<pre><code>git add .
git commit -m "apply theme"
git push origin master


</code></pre>
<p>成功推送到远程仓库后，等待几分钟，访问<code>username.github.io</code>，OK，成功。天黑请闭眼，有问题请留言。</p>
<p>四、发布博客</p>
<p>在仓库文件夹下，进入<code>_posts</code>目录，所有的文章都必须放在<code>_posts</code>文件夹下，访问 <a href="http://jekyllcn.com/docs/structure/" target="_blank" rel="noopener">Jekyll-目录结构</a> 详细了解每个文件夹的功能。</p>
<p>以markdown文档为例，按照如下格式创建md文件。</p>
<pre><code>yyyy-MM-dd-filename.md


</code></pre>
<img src="https://img-blog.csdnimg.cn/20190423165839423.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2OTA3MjUx,size_16,color_FFFFFF,t_70" width="600">
<p>完成后push到远程仓库，即可完成更新。</p>
<p>五、修改主题</p>
<p>将网站的信息改成自己的，修改<code>_config.yml</code>文件：</p>
<pre><code># Basic
title: 陈贤靖
subtitle: 井与陆地，海和岛屿。
description: Android Developer.
creator: &lt;a href="http://onev.cat"&gt;@onevcat&lt;/a&gt;

url: "https://amazingchen.github.io/#blog"

permalink: /:year/:month/:title/

# Format
highlighter: rouge

# supported colors: blue, green, purple, red, orange or slate. If you need clear, leave it empty.
# cover_color: red

# The blog button should not be removed.
blog_button:
    title: Blog
    description: Visit blog

# Navigation buttons in the front page.
nav:
    - {title: Projects, description: My Projects, url: 'https://github.com/AmazingChen/VHabit'}
    # - {title: Another Button, description: A button, url: 'http://example.com'}

# Pagination
plugins: [jekyll-paginate]
paginate: 10
paginate_path: "page/:num/"

# Comment
comment:
    disqus: vno-jekyll
    # duoshuo: 
    
# Social
social:
    github: AmazingChen
    mail: shixianjingla@gmail.com

# Google Analytics
ga:
    # id: your_ga_id
    # host: your_host


</code></pre>
<p>如果你对这套主题不太满意，并且具备web基础，可以动手修改。</p>
<img src="https://img-blog.csdnimg.cn/20190423170433644.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2OTA3MjUx,size_16,color_FFFFFF,t_70" width="600">
<p>如果不想博客数据被人轻易获取，建议将github仓库设置为私有。</p>
<img src="https://img-blog.csdnimg.cn/20190423172927155.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI2OTA3MjUx,size_16,color_FFFFFF,t_70" width="600">
<p>修改之后，我的博客长这样：<a href="https://amazingchen.github.io/" target="_blank" rel="noopener">陈贤靖</a></p>
<img src="https://img2018.cnblogs.com/blog/1304055/201904/1304055-20190423204105158-1779179352.png" width="600">
<img src="https://img2018.cnblogs.com/blog/1304055/201904/1304055-20190423204340426-955895345.png" width="600">
<p>完。</p>